{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/dashboard/DashboardActions.js","components/dashboard/Calendar.js","actions/dashboard.js","components/dashboard/DashboardTop.js","components/dashboard/Journal.js","components/dashboard/DashboardBottom.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","components/dashboard-forms/addCalendar.js","components/dashboard-forms/addJournal.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/dashboard.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","className","to","onClick","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Register","register","useState","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","minLength","protoTypes","PropTypes","func","isRequired","bool","config","body","JSON","stringify","post","errors","response","forEach","error","login","alerts","alert","length","map","key","DashboardActions","deleteCalendar","delete","statusText","status","calendar","calendars","cal","_id","date","time","choice","notes","DashboardTop","dashboard","deleteJournal","journal","journals","jour","activity","location","choice1","choice2","contact","DashboardBottom","src","spinner","style","width","margin","display","alt","getCurrentDashboard","user","useEffect","Spinner","addCalendar","history","put","push","withRouter","addJournal","Component","component","rest","render","props","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Login","Dashboard","AddCalendar","AddJournal","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.571ebbf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2c9683e0.gif\";","import { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\n// dispatch is from thunk middleware\nexport const setAlert = (msg, alertType) => dispatch => {\n    const id = uuid();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n    setTimeout(() => dispatch({\n        type: REMOVE_ALERT,\n        payload: id\n    }), 5000)\n};","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const GET_DASHBOARD = 'GET_DASHBOARD';\nexport const DASHBOARD_ERROR = 'DASHBOARD_ERROR';\nexport const UPDATE_DASHBOARD = 'UPDATE_CALENDAR';","// Checks to see if token is there, if it is, itll add it to the header\nimport axios from 'axios';\n\n// checks localstorage for token\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\n// Like in POSTMAN x-auth-token, we want to ALWAYS send that to auth user - utils\nexport const loadUser = () => async dispatch => {\n    if(localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('/api/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch(err) {\n        dispatch({\n            type: AUTH_ERROR\n        });\n    }\n};\n\n// Register User\nexport const register = ({ name, email, password}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // preparing the data to send\n    const body = JSON.stringify({ name, email, password});\n\n    try {\n        // to my api\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n};\n\n// Login User\nexport const login = ( email, password ) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // preparing the data to send\n    const body = JSON.stringify({ email, password});\n\n    try {\n        // to my api\n        const res = await axios.post('/api/auth', body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\n//  Logout / Clear Profile\nexport const logout = () => dispatch => {\n    dispatch({ type: CLEAR_PROFILE });\n    dispatch({ type: LOGOUT });\n};","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const authLinks = (\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/dashboard\">\n                        <i className='fas fa-user mr-1' /> {' '}\n                    DASHBOARD<span className=\"sr-only\">(current)</span></Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"#\">SEARCH</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link onClick={logout} className=\"nav-link\" to=\"#\"> \n                    <i className='fas fa-sign-out-alt' /> {' '}\n                        LOGOUT</Link>\n                </li>\n            </ul> \n        </div>\n    );\n\n    const guestLinks = (\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"#\">ABOUT</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">LOGIN</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/register\">REGISTER</Link>\n                </li>\n            </ul>\n        </div>\n    );\n\n    return (\n        <div>\n            {/* jumbotron */}\n            <div className=\"jumbotron jumbotron-fluid mb-0\">\n                <div className=\"container text-center\">\n                    <h1 className=\"display-4\">CONTACT TRACING HEALTH JOURNAL</h1>\n                </div>\n            </div>\n            <nav className=\"navbar navbar-expand-lg\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                {/* if not loading do this */}\n                {/* USES TENARY OPERATOR - Kind of like 'OR' */}\n                { !loading && (<Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment>) }\n            </nav>\n        </div>\n    )\n};\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        logout\n    }\n)(Navbar);","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n    if(isAuthenticated) {\n       return <Redirect to='/dashboard' />\n    }\n\n\n    return (\n        <section className=\"container-fluid\">\n            <div className=\"buttons\">\n              <Link to=\"/register\" className=\"btn btn-outline-dark\">Sign Up</Link>\n              <Link to=\"/login\" className=\"btn btn-outline-light\">Login</Link>\n            </div>\n        </section>\n    )\n};\n\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\n// This is for anchor tags or href/ links\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types'\n\n// WHAT IS PROPS\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    // formData are the inputs\n    // setFormData is the typing inside of the inputs\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n    \n    // Deconstructs formData so we can add it to the input's value\n    const { name, email, password, password2 } = formData;\n    \n    // onChange allows you to grab the formData and apply the setFormData\n    // [e.target.name] keeps it dynamic so you don't have to write name: - email: - password:\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if(password !== password2) {\n            // This will get passed in to are actions - and will be the msg\n            // LOOK AT THE ALERT COMPONENT\n            setAlert('Passwords do not match', 'danger');\n        } else {\n            register({ name, email, password });\n        }\n    };\n\n      // Redirect if loggged in\n    if(isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    };\n\n    return (\n        <Fragment>\n            <section className=\"container-fluid text-center\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Sign Up</h5>\n                        <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={name}\n                                    placeholder=\"Name here...\"\n                                    onChange={e => onChange(e)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email}\n                                    placeholder=\"Email address...\"\n                                    onChange={e => onChange(e)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"password\"\n                                    name=\"password\"\n                                    minLength=\"6\"\n                                    value={password}\n                                    placeholder=\"Password here...\"\n                                    onChange={e => onChange(e)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"password\"\n                                    name=\"password2\"\n                                    minLength=\"6\"\n                                    value={password2}\n                                    placeholder=\"Validate Password here\"\n                                    onChange={e => onChange(e)}\n                                />\n                            </div>\n                            <input type=\"submit\" className=\"btn btn-outline-dark\" value=\"Register\"/>\n                        </form>\n                    </div>\n                    <p className=\"my-1\">\n                        Already have an account? <Link to=\"/login\">Sign in</Link>\n                    </p>\n                </div>\n            </section>\n        </Fragment>\n    )\n};\n\nRegister.protoTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\n// get the auth state\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n    mapStateToProps, \n    { setAlert, register }\n)(Register);","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth'\n\nconst Login = ({ login, isAuthenticated }) => {\n    // client-side js goes here\n        \n    // formData are the inputs\n    // setFormData is the typing inside of the inputs\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n    \n    // Deconstructs formData so we can add it to the input's value\n    const { email, password } = formData;\n    \n    // onChange allows you to grab the formData and apply the setFormData\n    // [e.target.name] keeps it dynamic so you don't have to write name: - email: - password:\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password);\n    };\n\n    // Redirect if loggged in\n    if(isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />;\n    };\n\n    return (\n        <Fragment>\n            <section className=\"container-fluid text-center\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Login</h5>\n                        <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email}\n                                    placeholder=\"Email address...\"\n                                    onChange={e => onChange(e)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"password\"\n                                    name=\"password\"\n                                    minLength=\"6\"\n                                    value={password}\n                                    placeholder=\"Password here...\"\n                                    onChange={e => onChange(e)}\n                                />\n                            </div>\n                            <input type=\"submit\" className=\"btn btn-outline-dark\" value=\"Login\"/>\n                        </form>\n                    </div>\n                    <p className=\"my-1\">\n                        Don't have an account? <Link to=\"/register\">Sign Up</Link>\n                    </p>\n                </div>\n            </section>\n        </Fragment>\n    )\n};\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\n// get the auth state\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        login,\n    }   \n)(Login);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\n    // anytime your adding an alert it must have a key\n    // This is where the Register alert becomes dynamic\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        { alert.msg }\n    </div>\n));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const DashboardActions = () => {\n    return (\n        <div>\n            <Link to='/calendar-entry'>Add Calender Entry</Link>\n            <Link to='/journal-entry'>Add Journal Entry</Link>\n        </div>\n    )\n}\n\nexport default DashboardActions;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n// I want the user to be able to pick any time rather than set time.\n// import Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteCalendar } from '../../actions/dashboard';\n\n\nexport const Calendar = ({ calendar, deleteCalendar }) => {\n    const calendars = calendar.map(cal => (\n      <tr key={cal._id}>\n        <td>{cal.date}</td>\n        <td>{cal.time}</td>\n        <td>{cal.choice}</td>\n        <td>{cal.notes}</td>\n        <td><button onClick={() => deleteCalendar(cal._id)} className=\"btn btn-dark\">Delete</button></td>\n      </tr>\n    ));\n    // console.log(calendar)\n    return (\n      <Fragment>\n        <h2>Calendar</h2>\n        <table>\n          <thead>\n            <tr>\n                <th>date</th>\n                <th>time</th>\n                <th>choice</th>\n                <th>notes</th>\n            </tr>\n          </thead>\n          <tbody>{calendars}</tbody>\n        </table>\n      </Fragment>\n    );\n};\n \nCalendar.propTypes = {\n  calendar: PropTypes.array.isRequired,\n  deleteCalendar: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteCalendar },\n  )(Calendar);\n\n    \n    \n    \n    // const Calendar = ({ calendar }) => {\n    //     const calendars = calendar.map(cal => (\n    //         <tr key={cal._id}>\n    //             <td>{cal.date}</td>\n    //             <td>{cal.time}</td>\n    //             <td>{cal.choice}</td>\n    //             <td>{cal.notes}</td>\n    //             <td><button className=\"btn btn-dark\">Delete</button></td>\n    //         </tr>\n    //     ));\n    \n    //     return (\n    //         <Fragment>\n    //             <h2>Calendar</h2>\n    //             <table className=\"table\">\n    //                 <thead>\n    //                     <tr>\n    //                         <th>date</th>\n    //                         <th>notes</th>\n    //                         <th>choice</th>\n    //                         <th>notes</th>\n    //                     </tr>\n    //                 </thead>\n    //                 <tbody>{calenders}</tbody>\n    //             </table>\n    //         </Fragment>\n    //     );\n    // };","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_DASHBOARD,\n    DASHBOARD_ERROR,\n    UPDATE_DASHBOARD\n} from './types';\n\n// Get current users calendar/journal \nexport const getCurrentDashboard = () => async dispatch => {\n    try {\n        const res = await axios.get('api/dashboard');\n        // res.data RETURNS AND ARRAY NOT AN OBJECT CHECK MONGOOSE QUERYS\n        dispatch({\n            type: GET_DASHBOARD,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: DASHBOARD_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add Calendar entry\nexport const addCalendar = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/dashboard/calendar', formData, config);\n\n        dispatch({\n            type: UPDATE_DASHBOARD,\n            payload: res.data\n        });\n        // This was for dashboard Creation, do i still need this?\n        dispatch(setAlert('Calendar entry added', 'success'));\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        \n        dispatch({\n            type: DASHBOARD_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// Add Journal entry\nexport const addJournal = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/dashboard/journal', formData, config);\n\n        dispatch({\n            type: UPDATE_DASHBOARD,\n            payload: res.data\n        });\n        // This was for dashboard Creation, do i still need this?\n        dispatch(setAlert('Journal entry added', 'success'));\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        \n        dispatch({\n            type: DASHBOARD_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete journal entry\nexport const deleteJournal = id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/dashboard/journal/${id}`)\n\n        dispatch({\n            type: UPDATE_DASHBOARD,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Journal entry removed', 'success'));\n    } catch(err) {\n        dispatch({\n            type: DASHBOARD_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete calendar entry\nexport const deleteCalendar = id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/dashboard/calendar/${id}`)\n\n        dispatch({\n            type: UPDATE_DASHBOARD,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Calendar entry removed', 'success'));\n    } catch(err) {\n        dispatch({\n            type: DASHBOARD_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n\n\n\n// I dont need this\n// //  Create or Update dashboard\n// export const createProfile = (formData, history, edit = false) => async dispatch => {\n//     try {\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             }\n//         }\n\n//         const res = await axios.put('/api/dashboard', formData, config);\n\n\n//         dispatch({\n//             type: GET_DASHBOARD,\n//             payload: res.data\n//         });\n//         // This was for dashboard Creation, do i still need this?\n//         dispatch(setAlert(edit ? 'Dashboard Updated' : 'Dashboard Created', 'success'));\n\n//         if(!edit) {\n//             history.push('/dashboard');\n//         }\n//     } catch (err) {\n//         const errors = err.response.data.errors;\n\n//         if(errors) {\n//             errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//         }\n        \n//         dispatch({\n//             type: DASHBOARD_ERROR,\n//             payload: { msg: err.response.statusText, status: err.response.status }\n//         });\n//     }\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Calendar from './Calendar';\n\nconst DashboardTop = ({ dashboard: { calendar } }) => {\n    return (\n        <div>\n            <Calendar calendar={calendar} />\n        </div>\n    )\n};\n\nDashboardTop.propTypes = {\n    dashboard: PropTypes.object.isRequired\n};\n\nexport default DashboardTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n// I want the user to be able to pick any time rather than set time.\n// import Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteJournal } from '../../actions/dashboard';\n\nexport const Journal = ({ journal, deleteJournal }) => {\n    const journals = journal.map(jour => (\n      <tr key={jour._id}>\n        <td>{jour.date}</td>\n        <td>{jour.time}</td>\n        <td>{jour.activity}</td>\n        <td>{jour.location}</td>\n        <td>{jour.choice1}</td>\n        <td>{jour.choice2}</td>\n        <td>{jour.contact}</td>\n        <td>{jour.notes}</td>\n        <td><button onClick={() => deleteJournal(jour._id)} className=\"btn btn-dark\">Delete</button></td>\n      </tr>\n    ));\n    // console.log(calendar)\n    return (\n      <Fragment>\n        <h2>Journal</h2>\n        <table>\n          <thead>\n            <tr>\n                <th>date</th>\n                <th>time</th>\n                <th>activity</th>\n                <th>location</th>\n                <th>choice1</th>\n                <th>choice2</th>\n                <th>contact</th>\n                <th>notes</th>\n            </tr>\n          </thead>\n          <tbody>{journals}</tbody>\n        </table>\n      </Fragment>\n    );\n};\n \nJournal.propTypes = {\n  journal: PropTypes.array.isRequired,\n  deleteJournal: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteJournal },\n  )(Journal);\n\n    \n    \n    \n    // const Calendar = ({ calendar }) => {\n    //     const calendars = calendar.map(cal => (\n    //         <tr key={cal._id}>\n    //             <td>{cal.date}</td>\n    //             <td>{cal.time}</td>\n    //             <td>{cal.choice}</td>\n    //             <td>{cal.notes}</td>\n    //             <td><button className=\"btn btn-dark\">Delete</button></td>\n    //         </tr>\n    //     ));\n    \n    //     return (\n    //         <Fragment>\n    //             <h2>Calendar</h2>\n    //             <table className=\"table\">\n    //                 <thead>\n    //                     <tr>\n    //                         <th>date</th>\n    //                         <th>notes</th>\n    //                         <th>choice</th>\n    //                         <th>notes</th>\n    //                     </tr>\n    //                 </thead>\n    //                 <tbody>{calenders}</tbody>\n    //             </table>\n    //         </Fragment>\n    //     );\n    // };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Journal from './Journal';\n\nconst DashboardBottom = ({ dashboard: { journal } }) => {\n    return (\n        <div>\n            <Journal journal={journal} />\n        </div>\n    )\n};\n\nDashboardBottom.propTypes = {\n    dashboard: PropTypes.object.isRequired\n};\n\nexport default DashboardBottom;\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n    <Fragment>\n        <img \n            src={spinner}\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\n            alt='Loading...'\n        />\n    </Fragment>\n)","import React, { useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport DashboardTop from './DashboardTop';\nimport DashboardBottom from './DashboardBottom';\nimport { getCurrentDashboard } from '../../actions/dashboard';\nimport Spinner from '../layout/Spinner';\n\nconst Dashboard = ({ getCurrentDashboard, auth: { user }, dashboard: { dashboard, loading } }) => {\n    useEffect(() => {\n        getCurrentDashboard();\n    }, [getCurrentDashboard]);\n            \n    return (\n        <Fragment>\n          {/* if profile is null or loading then show spinner, else load content */}\n          {dashboard === null || loading ? <Spinner /> : \n            <Fragment>\n              <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Welcome {user && user.name}\n              </p>\n              {dashboard !== null ? (\n                <Fragment>\n                  <DashboardActions />\n                  <div id=\"calenderDiv\">\n                    {dashboard.calendar.length > 0 ? (\n                      <Fragment>\n                        <DashboardTop dashboard={dashboard} />\n                      </Fragment>\n                    ) : (<h4>No Calendar entries</h4>)}\n                  </div>\n                  <div id=\"journalDiv\">\n                    {dashboard.journal.length > 0 ? (\n                      <Fragment>\n                        <DashboardBottom dashboard={dashboard} />\n                      </Fragment>\n                      ) : (<h4>No Journal entries</h4>)}\n                  </div>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <p>You have not Registered yet</p>\n                  <Link to=\"/register\">Register</Link>\n                </Fragment>\n              )}\n            </Fragment>\n          }\n       </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentDashboard: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    dashboard: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    dashboard: state.dashboard\n});\n\nexport default connect(\n    mapStateToProps,\n    { getCurrentDashboard }\n)(Dashboard);","import React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addCalendar } from '../../actions/dashboard';\n \nconst AddCalendar = ({ addCalendar, history}) => {\n    // hooks\n    const [formData, setFormData] = useState({\n        date: '',\n        time: '',\n        choice: '',\n        notes: ''\n    });\n    \n    const {\n        date,\n        time,\n        choice,\n        notes\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n            <h1>Add Calendar entry</h1>\n            <form onSubmit={e => {\n                e.preventDefault();\n                addCalendar(formData, history);\n            }}>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <input type=\"date\" name=\"date\" value={date} onChange={e => onChange(e)} required />\n                    </div>\n                    <div className=\"col-6\">\n                        <input type=\"time\" name=\"time\" value={time} onChange={e => onChange(e)} required />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <select name=\"choice\" value={choice} onChange={e => onChange(e)} required >\n                            <option value=\"wore_mask\">Stayed Home</option>\n                            <option value=\"did_not\">Deliveries</option>\n                            <option value=\"did_not\">Symptoms</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row mb-3\">\n                    <div className=\"col\">\n                        <textarea type=\"text\" name=\"notes\"  value={notes} onChange={e => onChange(e)} required placeholder=\"Notes here...\" ></textarea>\n                    </div>\n                </div>\n                <button className=\"btn btn-outline-dark\" type=\"submit\">Submit</button>\n            </form>\n        </Fragment>\n    )\n};\n\nAddCalendar.propTypes = {\n    addCalendar: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addCalendar })(withRouter(AddCalendar));\n","import React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addJournal } from '../../actions/dashboard';\n \nconst AddJournal = ({ addJournal, history}) => {\n    // hooks\n    const [formData, setFormData] = useState({\n        date: '',\n        time: '',\n        activity: '',\n        location: '',\n        choice1: '',\n        choice2: '',\n        contact: '',\n        notes: ''\n    });\n    \n    const {\n        date,\n        time,\n        activity,\n        location,\n        choice1,\n        choice2,\n        contact,\n        notes\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n            <h4>Journals here</h4>\n            <form \n                onSubmit={e => {\n                e.preventDefault();\n                addJournal(formData, history);\n                }}\n            >\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <input type=\"date\" name=\"date\" value={date} onChange={e => onChange(e)} />\n                    </div>\n                    <div className=\"col-6\">\n                        <input type=\"time\" name=\"time\" value={time} onChange={e => onChange(e)} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <input type=\"text\" name=\"activity\" value={activity} onChange={e => onChange(e)} placeholder=\"Activity here...\" />\n                    </div>\n                    <div className=\"col-6\">\n                        <input type=\"text\" name=\"location\" value={location} onChange={e => onChange(e)} placeholder=\"Location here...\" />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <select name=\"choice1\" value={choice1} onChange={e => onChange(e)} >\n                            <option value=\"wore_mask\">Wore Mask</option>\n                            <option value=\"did_not\">Did not wear Mask</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <select name=\"choice2\" value={choice2} onChange={e => onChange(e)} >\n                            <option value=\"wore_mask\">Wore Mask</option>\n                            <option value=\"did_not\">Did not wear Mask</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row mb-2\">\n                    <div className=\"col\">\n                        <textarea type=\"text\" name=\"contact\" placeholder=\"Any contact with COVID here...\" value={contact} onChange={e => onChange(e)} ></textarea>\n                    </div>\n                </div>\n                <div className=\"row mb-3\">\n                    <div className=\"col\">\n                        <textarea type=\"text\" name=\"notes\"  placeholder=\"Any notes here...\" value={notes} onChange={e => onChange(e)} ></textarea>\n                    </div>\n                </div>\n                <button className=\"btn btn-outline-dark\" type=\"submit\">Submit</button>\n            </form>\n        </Fragment>\n    )\n};\n\nAddJournal.propTypes = {\n    addJournal: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addJournal })(withRouter(AddJournal));\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n// ...rest takes in anything else passed in\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route \n        {...rest} \n        render={ props => !isAuthenticated && !loading ? (\n            <Redirect to='/login' />\n        ) : (\n            <Component {...props} />\n            )\n        } \n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n};","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/types';\n\n// Looking in the redux store\nconst initialState = {\n    // looking for registration token\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    // loading - true means we want it to load - false means its done loading\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            // payload is an object containing token etc,.\n            localStorage.setItem('token', payload.token);\n            // If register success redeclare initialState with different values\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                // loading - true means we want it to load - false means its done loading\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            // If fails we want to remove the token completely\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                // loading - true means we want it to load - false means its done loading\n                loading: false\n            }\n        default:\n            return state;\n    }\n};","import { \n    GET_DASHBOARD, \n    DASHBOARD_ERROR, \n    CLEAR_PROFILE,\n    UPDATE_DASHBOARD\n} from \"../actions/types\";\n\nconst initialState = {\n    dashboard: null,\n    loading: true,\n    error: {}\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_DASHBOARD:\n        case UPDATE_DASHBOARD:\n            return {\n                ...state,\n                dashboard: payload,\n                loading: false\n            };\n        case DASHBOARD_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                dashboard: null\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                dashboard: null,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport dashboard from './dashboard'\n\nexport default combineReducers({\n    alert,\n    auth,\n    dashboard\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// components\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport AddCalendar from './components/dashboard-forms/addCalendar';\nimport AddJournal from './components/dashboard-forms/addJournal'\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n// REDUX \nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\n// checks to see if token is verified\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => { \n  // hook*****\n  // useEffect will keep running and be a constant loop anytimes the state changes\n  // This is checking the auth of the user\n  // adding the emprty-array as another param makes it only run once\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  \n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container-fluid'>\n            {/* These are the routes - Depending on what the client requests, determines which one gets execxuted. */}\n            {/* The Routes are components, They work a lot like partials in express or base django*/}\n            {/* 'Switch' can only hold routes.  */}\n            <Alert />\n            <Switch>\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/register' component={Register} />\n              {/* Private route is a seperate component that you can call to hide components unless validated */}\n              {/* Do this if you don't want users to be on the page unless validated */}\n              {/* This is like django decorators @login_required */}\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute exact path='/calendar-entry' component={AddCalendar} />\n              <PrivateRoute exact path='/journal-entry' component={AddJournal} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// This grabs the root div on the index.html and applies ALL the react?\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}